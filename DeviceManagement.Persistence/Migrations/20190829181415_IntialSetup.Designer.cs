// <auto-generated />
using System;
using DeviceManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeviceManagement.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190829181415_IntialSetup")]
    partial class IntialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.AuditTrail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.Device", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Available");

                    b.Property<string>("Comments");

                    b.Property<int>("Count");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.DeviceStatus", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DeviceStatus");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.Role", b =>
                {
                    b.Property<byte>("Id");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastLoginOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<byte>("RoleId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.UserDevice", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<long>("DeviceId");

                    b.Property<string>("CancelledComments");

                    b.Property<string>("RejectedComments");

                    b.Property<DateTime?>("RejectedOn");

                    b.Property<string>("RequestDesciption");

                    b.Property<DateTime>("RequestedOn");

                    b.Property<DateTime>("ReturnDate");

                    b.Property<string>("ReturnedComments");

                    b.Property<DateTime?>("ReturnedOn");

                    b.Property<byte>("Status");

                    b.HasKey("UserId", "DeviceId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("Status");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.AuditTrail", b =>
                {
                    b.HasOne("DeviceManagement.Persistence.Modal.User", "User")
                        .WithMany("AuditTrails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("ForeignKey_AuditTrail_User")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.User", b =>
                {
                    b.HasOne("DeviceManagement.Persistence.Modal.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("ForeignKey_User_Role")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeviceManagement.Persistence.Modal.UserDevice", b =>
                {
                    b.HasOne("DeviceManagement.Persistence.Modal.Device", "Device")
                        .WithMany("UserDevice")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeviceManagement.Persistence.Modal.DeviceStatus", "DeviceStatus")
                        .WithMany("UserDevice")
                        .HasForeignKey("Status")
                        .HasConstraintName("ForeignKey_UserDevice_DeviceStatus")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeviceManagement.Persistence.Modal.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
